---
const enableDistanceInput = true;
---

<script src='../utils/main.ts'></script>
<section>
  <form class='time-unit-selection card green'>
    <fieldset>
      <legend>Select a timeline unit ‚è∞</legend>

      <div class='inputs-group'>
        <div class='input-option'>
          <input
            type='radio'
            id='history-in-a-year'
            name='display-unit-timeline'
            value='history-in-a-year'
            checked
          />
          <label for='history-in-a-year'>If History was 1 year</label>
        </div>
        <div class='input-option'>
          <input
            type='radio'
            id='history-in-a-day'
            name='display-unit-timeline'
            value='history-in-a-day'
          />
          <label for='history-in-a-day'>If History was 1 day</label>
        </div>
        <div class='input-option'>
          <input
            type='radio'
            id='years-vs-present'
            name='display-unit-timeline'
            value='years-vs-present'
          />
          <label for='years-vs-present'>Years before present</label>
        </div>
        <div class='input-option'>
          <input
            type='radio'
            id='years-vs-era'
            name='display-unit-timeline'
            value='years-vs-era'
          />
          <label for='years-vs-era'>Years compared to our era</label>
        </div>
        {
          enableDistanceInput && (
            <div
              data-container='distance-inputs-container'
              class='input-option two-rows-reveal require-js'
            >
              <input
                type='radio'
                id='history-in-distance'
                name='display-unit-timeline'
                value='history-in-distance'
              />
              <label for='history-in-distance'>
                History scaled to specific distance
              </label>
              <div class='distance-input'>
                <label for='distance'>Distance (m)</label>
                <input type='number' name='distance' id='distance' />
              </div>
            </div>
          )
        }
      </div>
    </fieldset>
  </form>
  <form class='starting-point-selection card orange'>
    <fieldset>
      <legend>Select a Starting Point üèÅ</legend>

      <div class='inputs-group'>
        <div class='input-option'>
          <input
            type='radio'
            id='genus-homo'
            name='display-start-point-timeline'
            value='genus-homo'
            checked
          />
          <label for='genus-homo'>Genus Homo</label>
        </div>
        <div class='input-option'>
          <input
            type='radio'
            id='fire'
            name='display-start-point-timeline'
            value='fire'
          />
          <label for='fire'>Daily usage of fire</label>
        </div>
        <div class='input-option'>
          <input
            type='radio'
            id='sapiens'
            name='display-start-point-timeline'
            value='sapiens'
          />
          <label for='sapiens'>Homo Sapiens</label>
        </div>
      </div>
    </fieldset>
  </form>
</section>

<style>
  section {
    display: flex;
  }

  form.card {
    align-self: center;
    padding: 25px;
    box-shadow: var(--shadow-elevation-high);
    margin-bottom: 70px;
    min-block-size: auto;
    min-inline-size: auto;
  }
  fieldset {
    border: none;
  }
  legend {
    font-size: 1.5em;
    font-weight: bold;
    color: var(--green-2-darker);
    padding-bottom: 15px;
  }
  fieldset div.inputs-group {
    display: flex;
    flex-direction: column;
    gap: 3px;
  }
  fieldset div.input-option {
    padding: 5px 0 7px;
    border-radius: var(--radius-1);
  }
  fieldset div.input-option:not(.two-rows-reveal) {
    display: flex;
  }
  fieldset div.input-option:focus-within {
    outline: 4px solid var(--green-2-dark);
  }
  fieldset div.input-option:has(input:checked) {
    border-radius: var(--radius-1);
    background-color: var(--green-2-dark-2);
    color: #fff;
  }
  input,
  label {
    cursor: pointer;
  }
  .input-option > label {
    flex: 1;
  }

  .two-rows-reveal {
    display: grid;
    grid-template-areas:
      "radio label"
      ". to-reveal";
    grid-template-columns: auto 1fr;
    grid-template-rows: 1fr 1fr;
  }
  .two-rows-reveal > input {
    grid-area: radio;
  }
  .two-rows-reveal > label {
    grid-area: label;
  }
  .two-rows-reveal .distance-input {
    display: none;
    grid-area: to-reveal;
    padding-right: 5px;
  }
  .two-rows-reveal .distance-input > :is(label, input) {
    flex: 20%;
    height: auto;
  }
  #history-in-distance:checked ~ .distance-input {
    display: flex;
    justify-content: center;
    gap: 10px;
  }
  @supports selector(:has(input)) {
    fieldset div.inputs-group {
      background-color: var(--green-1-light);
      padding: 4px;
      border-radius: var(--radius-2);
    }

    fieldset div.input-option:focus-within {
      outline: none;
    }
    fieldset div.input-option:has(input:focus-visible) {
      outline: 4px solid var(--pink-1);
    }
    fieldset input {
      width: 0;
      height: 0;
    }
    fieldset div.input-option:has(label:hover):not(:has(input:checked)) {
      background-color: var(--green-2-lighter);
    }
    .two-rows-reveal {
      grid-template-areas: "radio label";
      grid-template-rows: 1fr 0px;
      grid-template-columns: 8px 1fr;
    }
    .two-rows-reveal:has(> input:checked) {
      grid-template-areas:
        "radio label"
        ". to-reveal";
      grid-template-rows: 1fr 1fr;
    }
  }
  @media screen and (min-width: 800px) {
    form.card {
      margin-bottom: 100px;
    }
  }
</style>
